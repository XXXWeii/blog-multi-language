(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{627:function(n,s,e){"use strict";e.r(s);var a=e(2),t=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"_0-preface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-preface"}},[n._v("#")]),n._v(" 0. Preface")]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("Regarding the use of "),s("code",[n._v("promise, async/await")]),n._v(", I believe many friends are familiar with it, but when it comes to "),s("strong",[n._v("event loop mechanism output results")]),n._v(" similar topics, do you dare to say that they know it?")]),n._v(" "),s("p",[n._v("give it a try?")]),n._v(" "),s("p",[n._v("🌰1:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function async1 () {\n     await new Promise((resolve, reject) => {\n         resolve()\n     })\n     console. log('A')\n}\n\nasync1()\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n\n// Final result 👉: B A C D\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br")])]),s("p",[n._v("🌰2:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function async1 () {\n     await async2()\n     console. log('A')\n}\n\nasync function async2 () {\n     return new Promise((resolve, reject) => {\n         resolve()\n     })\n}\n\nasync1()\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n\n// Final result 👉: B C D A\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br")])]),s("p",[n._v("❓ Why is there a difference in basically the same code, not much to say 👇")]),n._v(" "),s("h2",{attrs:{id:"_1-async-function-return-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-async-function-return-value"}},[n._v("#")]),n._v(" 1. async function return value")]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("Before discussing "),s("code",[n._v("await")]),n._v(", let’s talk about how the "),s("code",[n._v("async")]),n._v(" function handles the return value. It will identify the type of the return value just like "),s("code",[n._v("Promise.prototype.then")]),n._v(".")]),n._v(" "),s("p",[n._v("👉"),s("strong",[n._v("According to the type of the return value, the js engine handles the return value differently")])]),n._v(" "),s("blockquote",[s("p",[n._v("📑 Conclusion: When the "),s("code",[n._v("async")]),n._v(" function throws a return value, it will start "),s("strong",[n._v("different numbers of microtasks")]),n._v(" according to the return value "),s("strong",[n._v("type")])]),n._v(" "),s("ul",[s("li",[n._v("return result value: not "),s("code",[n._v("thenable")]),n._v(", not "),s("code",[n._v("promise")]),n._v(" (do not wait)")]),n._v(" "),s("li",[n._v("return result value: "),s("code",[n._v("thenable")]),n._v(" (waiting for 1 "),s("code",[n._v("then")]),n._v(" time)")]),n._v(" "),s("li",[n._v("return result value: "),s("code",[n._v("promise")]),n._v(" (waiting for 2 "),s("code",[n._v("then")]),n._v(" time)")])])]),n._v(" "),s("p",[n._v("🌰1:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function testA () {\n     return 1;\n}\n\ntestA().then(() => console.log(1));\nPromise. resolve()\n     .then(() => console.log(2))\n     .then(() => console.log(3));\n\n// (without waiting) final result 👉: 1 2 3\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("🌰2:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function testB () {\n     return {\n         then (cb) {\n             cb();\n         }\n     };\n}\n\ntestB().then(() => console.log(1));\nPromise. resolve()\n     .then(() => console.log(2))\n     .then(() => console.log(3));\n\n// (wait for a then) final result 👉: 2 1 3\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])]),s("p",[n._v("🌰3:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function testC () {\n     return new Promise((resolve, reject) => {\n         resolve()\n     })\n}\n\ntestC().then(() => console.log(1));\nPromise. resolve()\n     .then(() => console.log(2))\n     .then(() => console.log(3));\n\n// (waiting for two then) final result 👉: 2 3 1\n\n\n\n\nasync function testC () {\n     return new Promise((resolve, reject) => {\n         resolve()\n     })\n}\n\ntestC().then(() => console.log(1));\nPromise. resolve()\n     .then(() => console.log(2))\n     .then(() => console.log(3))\n     .then(() => console.log(4))\n\n// (waiting for two then) final result 👉: 2 3 1 4\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br")])]),s("p",[n._v("After reading these three 🌰, do you have a deeper understanding of the "),s("code",[n._v("above conclusion")]),n._v("?")]),n._v(" "),s("p",[n._v("Don't be impatient, let's try a classic interview question 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function async1 () {\n     console. log('1')\n     await async2()\n     console.log('AAA')\n}\n\nasync function async2 () {\n     console. log('3')\n     return new Promise((resolve, reject) => {\n         resolve()\n         console. log('4')\n     })\n}\n\nconsole. log('5')\n\nsetTimeout(() => {\n     console. log('6')\n}, 0);\n\nasync1()\n\nnew Promise((resolve) => {\n     console. log('7')\n     resolve()\n}).then(() => {\n     console. log('8')\n}).then(() => {\n     console. log('9')\n}).then(() => {\n     console. log('10')\n})\nconsole. log('11')\n\n// Final result 👉: 5 1 3 4 7 11 8 9 AAA 10 6\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br")])]),s("p",[n._v("👀 Did you make a mistake?")]),n._v(" "),s("p",[n._v("Haha, no problem")]),n._v(" "),s("blockquote",[s("p",[n._v("Step split 👇:")]),n._v(" "),s("ol",[s("li",[s("p",[n._v("Execute the synchronous code first, and output "),s("code",[n._v("5")])])]),n._v(" "),s("li",[s("p",[n._v("Executing "),s("code",[n._v("setTimeout")]),n._v(" is put into the macro task asynchronous queue")])]),n._v(" "),s("li",[s("p",[n._v("Then execute the "),s("code",[n._v("async1")]),n._v(" function and output "),s("code",[n._v("1")])])]),n._v(" "),s("li",[s("p",[n._v("Execute "),s("code",[n._v("async2")]),n._v(" function, output "),s("code",[n._v("3")])])]),n._v(" "),s("li",[s("p",[n._v("The code in the "),s("code",[n._v("Promise")]),n._v(" constructor is a synchronous code, output "),s("code",[n._v("4")])])])]),n._v(" "),s("blockquote",[s("p",[n._v("The return value of the "),s("code",[n._v("async2")]),n._v(" function is "),s("code",[n._v("Promise")]),n._v(", and it will be released after waiting for "),s("code",[n._v("2")]),n._v(" "),s("code",[n._v("then")]),n._v(", so "),s("code",[n._v("AAA")]),n._v(" cannot be output temporarily")])]),n._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[s("code",[n._v("async1")]),n._v(" function "),s("strong",[n._v("temporary")]),n._v(" ends, continue to go down, output "),s("code",[n._v("7")])])]),n._v(" "),s("li",[s("p",[n._v("Synchronous code, output "),s("code",[n._v("11")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the first "),s("code",[n._v("then")]),n._v(", output "),s("code",[n._v("8")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the second "),s("code",[n._v("then")]),n._v(", output "),s("code",[n._v("9")])])]),n._v(" "),s("li",[s("p",[n._v("Finally "),s("strong",[n._v("wait")]),n._v(" until the two "),s("code",[n._v("then")]),n._v("s are executed, execute the rest of the "),s("code",[n._v("async1")]),n._v(" function, and output "),s("code",[n._v("AAA")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the last microtask "),s("code",[n._v("then")]),n._v(" and output "),s("code",[n._v("10")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the last macrotask "),s("code",[n._v("setTimeout")]),n._v(", output "),s("code",[n._v("6")])])])])]),n._v(" "),s("p",[n._v("❓ Is it suddenly clear, welcome to like and collect!")]),n._v(" "),s("h2",{attrs:{id:"_2-differences-between-await-rvalue-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-differences-between-await-rvalue-types"}},[n._v("#")]),n._v(" 2. Differences between await rvalue types")]),n._v(" "),s("hr"),n._v(" "),s("h3",{attrs:{id:"_2-1-non-thenable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-non-thenable"}},[n._v("#")]),n._v(" 2.1, non "),s("code",[n._v("thenable")])]),n._v(" "),s("p",[n._v("🌰1:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(1);\n     await 1;\n     console. log(2);\n}\n\ntest();\nconsole. log(3);\n// Final result 👉: 1 3 2\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("🌰2:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function func () {\n     console. log(2);\n}\n\nasync function test () {\n     console. log(1);\n     await func();\n     console. log(3);\n}\n\ntest();\nconsole. log(4);\n\n// Final result 👉: 1 2 4 3\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])]),s("p",[n._v("🌰3:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(1);\n     await 123\n     console. log(2);\n}\n\ntest();\nconsole. log(3);\n\nPromise. resolve()\n     .then(() => console.log(4))\n     .then(() => console.log(5))\n     .then(() => console.log(6))\n     .then(() => console.log(7));\n\n// Final result 👉: 1 3 2 4 5 6 7\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("blockquote",[s("p",[n._v("Note:")]),n._v(" "),s("p",[s("code",[n._v("await")]),n._v(" followed by a non-"),s("code",[n._v("thenable")]),n._v(" type will immediately add a microtask "),s("code",[n._v("then")]),n._v(" to the microtask queue, "),s("strong",[n._v("but no need to wait")])])]),n._v(" "),s("h3",{attrs:{id:"_2-2-thenable-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-thenable-type"}},[n._v("#")]),n._v(" 2.2, "),s("code",[n._v("thenable")]),n._v(" type")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(1);\n     await {\n         then (cb) {\n             cb();\n         },\n     };\n     console. log(2);\n}\n\ntest();\nconsole. log(3);\n\nPromise. resolve()\n     .then(() => console.log(4))\n     .then(() => console.log(5))\n     .then(() => console.log(6))\n     .then(() => console.log(7));\n\n// Final result 👉: 1 3 4 2 5 6 7\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("blockquote",[s("p",[n._v("Note:")]),n._v(" "),s("p",[s("code",[n._v("await")]),n._v(" is followed by "),s("code",[n._v("thenable")]),n._v(" type, which needs to be executed after **waiting for a "),s("code",[n._v("then")]),n._v(" time")])]),n._v(" "),s("h3",{attrs:{id:"_2-3-promise-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-promise-type"}},[n._v("#")]),n._v(" 2.3, "),s("code",[n._v("Promise")]),n._v(" type")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(1);\n     await new Promise((resolve, reject) => {\n         resolve()\n     })\n     console. log(2);\n}\n\ntest();\nconsole. log(3);\n\nPromise. resolve()\n     .then(() => console.log(4))\n     .then(() => console.log(5))\n     .then(() => console.log(6))\n     .then(() => console.log(7));\n\n// Final result 👉: 1 3 2 4 5 6 7\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])]),s("p",[n._v("❓ Why does it behave the same as a non "),s("code",[n._v("thenable")]),n._v(" value? Why not wait for two "),s("code",[n._v("then")]),n._v("s?")]),n._v(" "),s("blockquote",[s("p",[n._v("Note:")]),n._v(" "),s("ul",[s("li",[n._v("TC 39 (the ECMAScript standard setter) made a modification to how to handle "),s("code",[n._v("await")]),n._v(" followed by "),s("code",[n._v("promise")]),n._v(", "),s("strong",[n._v("removed")]),n._v(" two additional microtasks, in "),s("strong",[n._v("earlier versions")]),n._v(", Will still wait for two "),s("code",[n._v("then")]),n._v(" time")]),n._v(" "),s("li",[n._v("Someone translated the official explanation: "),s("strong",[n._v("faster async functions and promises")]),n._v("[1], but the "),s("code",[n._v("thenable")]),n._v(" is not modified in this update")])])]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("Doing so can greatly optimize the speed of "),s("code",[n._v("await")]),n._v(" waiting 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function func () {\n     console. log(1);\n     await 1;\n     console. log(2);\n     await 2;\n     console. log(3);\n     await 3;\n     console. log(4);\n}\n\nasync function test () {\n     console. log(5);\n     await func();\n     console. log(6);\n}\n\ntest();\nconsole. log(7);\n\nPromise. resolve()\n     .then(() => console.log(8))\n     .then(() => console.log(9))\n     .then(() => console.log(10))\n     .then(() => console.log(11));\n\n// Final result 👉: 5 1 7 2 8 3 9 4 10 6 11\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br")])]),s("blockquote",[s("p",[n._v("Note:")]),n._v(" "),s("p",[s("code",[n._v("await")]),n._v(" and "),s("code",[n._v("Promise.prototype.then")]),n._v(" are often equivalent in "),s("strong",[n._v("chronological order")]),n._v(", but there is an "),s("strong",[n._v("essential difference")]),n._v(" between them.")])]),n._v(" "),s("blockquote",[s("ul",[s("li",[n._v("The "),s("code",[n._v("await")]),n._v(" in the "),s("code",[n._v("test")]),n._v(" function will wait for all the "),s("code",[n._v("await")]),n._v(" in the "),s("code",[n._v("func")]),n._v(" function to get the command to resume function execution and the command to get "),s("strong",[n._v("resume function execution")]),n._v(" after the entire function is executed;")]),n._v(" "),s("li",[n._v("That is to say, the "),s("code",[n._v("await")]),n._v(" of the "),s("code",[n._v("func")]),n._v(" function "),s("strong",[n._v("cannot be equivalent")]),n._v(" "),s("code",[n._v("then")]),n._v(" in time order at this time, but waits until the "),s("code",[n._v("test")]),n._v(" function is completely executed;")]),n._v(" "),s("li",[n._v("For example, the number "),s("code",[n._v("6")]),n._v(" here is output very late, "),s("strong",[n._v("if")]),n._v(" is simply regarded as "),s("code",[n._v("then")]),n._v(", "),s("code",[n._v("6")]),n._v(" should be output as a synchronous code when the next microtask queue is executed.")])])]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("So we can merge the code of the two functions 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(5);\n\n     console. log(1);\n     await 1;\n     console. log(2);\n     await 2;\n     console. log(3);\n     await 3;\n     console. log(4);\n     await null;\n\n     console. log(6);\n}\n\ntest();\nconsole. log(7);\n\nPromise. resolve()\n     .then(() => console.log(8))\n     .then(() => console.log(9))\n     .then(() => console.log(10))\n     .then(() => console.log(11));\n\n// Final result 👉: 5 1 7 2 8 3 9 4 10 6 11\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br")])]),s("hr"),n._v(" "),s("p",[n._v("Because the original function is fused, "),s("code",[n._v("await")]),n._v(" at this time can be equivalent to "),s("code",[n._v("Promise.prototype.then")]),n._v(", and it can be completely equivalent to the following code 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(5);\n     console. log(1);\n     Promise. resolve()\n         .then(() => console.log(2))\n         .then(() => console.log(3))\n         .then(() => console.log(4))\n         .then(() => console.log(6))\n}\n\ntest();\nconsole. log(7);\n\nPromise. resolve()\n     .then(() => console.log(8))\n     .then(() => console.log(9))\n     .then(() => console.log(10))\n     .then(() => console.log(11));\n\n// Final result 👉: 5 1 7 2 8 3 9 4 10 6 11\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("hr"),n._v(" "),s("p",[n._v("The above three writing methods are completely equivalent in the order of time, so you can regard the code after "),s("code",[n._v("await")]),n._v(" as the result of executing it in "),s("code",[n._v("then")]),n._v(", and because the "),s("code",[n._v("async")]),n._v(" function will return "),s("code",[n._v("promise")]),n._v(" Instance, so it can also be equivalent to 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(5);\n     console. log(1);\n}\n\ntest()\n     .then(() => console.log(2))\n     .then(() => console.log(3))\n     .then(() => console.log(4))\n     .then(() => console.log(6))\n\nconsole. log(7);\n\nPromise. resolve()\n     .then(() => console.log(8))\n     .then(() => console.log(9))\n     .then(() => console.log(10))\n     .then(() => console.log(11));\n\n// Final result 👉: 5 1 7 2 8 3 9 4 10 6 11\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("p",[n._v("It can be found that the "),s("code",[n._v("test")]),n._v(" function is all synchronous code...")]),n._v(" "),s("p",[n._v("So 👉: "),s("strong",[s("code",[n._v("async/await")]),n._v(" is a synchronous way to perform asynchronous operations")])]),n._v(" "),s("h2",{attrs:{id:"_3、🌰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、🌰"}},[n._v("#")]),n._v(" 3、🌰")]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("🌰1:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function async2 () {\n     new Promise((resolve, reject) => {\n         resolve()\n     })\n}\n\nasync function async3 () {\n     return new Promise((resolve, reject) => {\n         resolve()\n     })\n}\n\nasync function async1 () {\n     // Method 1: Final result: B A C D\n     // await new Promise((resolve, reject) => {\n     // resolve()\n     // })\n\n     // Method 2: Final result: B A C D\n     // await async2()\n\n     // Method 3: Final result: B C D A\n     await async3()\n\n     console. log('A')\n}\n\nasync1()\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br")])]),s("blockquote",[s("p",[n._v("General idea 👇:")]),n._v(" "),s("ul",[s("li",[n._v("First, the overall return value of an "),s("code",[n._v("async")]),n._v(" function is always a "),s("code",[n._v("Promise")]),n._v(", no matter what the value itself is**")]),n._v(" "),s("li",[n._v("Method 1: "),s("code",[n._v("await")]),n._v(" is "),s("code",[n._v("Promise")]),n._v(", no need to wait")]),n._v(" "),s("li",[n._v("Method 2: "),s("code",[n._v("await")]),n._v(" is an "),s("code",[n._v("async")]),n._v(" function, but the return value of the function itself is "),s("strong",[n._v("not "),s("code",[n._v("thenable")])]),n._v(", no need to wait")]),n._v(" "),s("li",[n._v("Method 3: "),s("code",[n._v("await")]),n._v(" is "),s("code",[n._v("async")]),n._v(" function, and the return value itself is "),s("code",[n._v("Promise")]),n._v(", need to wait for two "),s("code",[n._v("then")]),n._v(" time")])])]),n._v(" "),s("p",[n._v("🌰2:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function func () {\n     console. log(2);\n\n     // Method 1: 1 2 4 5 3 6 7\n     // Promise. resolve()\n     // .then(() => console.log(5))\n     // .then(() => console.log(6))\n     // .then(() => console.log(7))\n\n     // Method 2: 1 2 4 5 6 7 3\n     return Promise. resolve()\n         .then(() => console.log(5))\n         .then(() => console.log(6))\n         .then(() => console.log(7))\n}\n\nasync function test () {\n     console. log(1);\n     await func();\n     console. log(3);\n}\n\ntest();\nconsole. log(4);\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br")])]),s("blockquote",[s("p",[n._v("Step split 👇:")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("Method 1:")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("The synchronous code outputs "),s("code",[n._v("1, 2")]),n._v(", then adds "),s("code",[n._v("then1")]),n._v(" at "),s("code",[n._v("log(5)")]),n._v(" to the microtask queue, "),s("code",[n._v("await")]),n._v(" gets the exact "),s("code",[n._v("func")]),n._v(" function return value "),s("code",[n._v("undefined")]),n._v(", and the subsequent code Put it into the microtask queue ("),s("code",[n._v("then2")]),n._v(", you can understand it like this)")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the synchronous code and output "),s("code",[n._v("4")]),n._v(", so far, all synchronous codes are completed")])]),n._v(" "),s("li",[s("p",[n._v("Execute the first placed microtask "),s("code",[n._v("then1")]),n._v(" output "),s("code",[n._v("5")]),n._v(", generate "),s("code",[n._v("log(6)")]),n._v(" microtask "),s("code",[n._v("then3")])])]),n._v(" "),s("li",[s("p",[n._v("Execute the second placed microtask "),s("code",[n._v("then2")]),n._v(" output "),s("code",[n._v("3")])])]),n._v(" "),s("li",[s("p",[n._v("Then execute microtask "),s("code",[n._v("then3")]),n._v(", output "),s("code",[n._v("6")]),n._v(", generate "),s("code",[n._v("log(7)")]),n._v(" microtask "),s("code",[n._v("then4")])])]),n._v(" "),s("li",[s("p",[n._v("Execute "),s("code",[n._v("then4")]),n._v(", output "),s("code",[n._v("7")])])]),n._v(" "),s("li",[s("p",[n._v("Method 2:")])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("The synchronous code outputs "),s("code",[n._v("1, 2")]),n._v(", "),s("code",[n._v("await")]),n._v(" gets the return value of the "),s("code",[n._v("func")]),n._v(" function, but does not get "),s("strong",[n._v("specific results")]),n._v(" (determined by the mechanism of "),s("code",[n._v("Promise")]),n._v(" itself), suspend the execution of the current "),s("code",[n._v("async")]),n._v("Code inside the function (jump out, give way)")])])]),n._v(" "),s("li",[s("p",[n._v("Output "),s("code",[n._v("4")]),n._v(", so far, all synchronous codes are completed")])]),n._v(" "),s("li",[s("p",[s("code",[n._v("await")]),n._v(" waits until "),s("code",[n._v("Promise.resolve().then...")]),n._v(" is executed, and then releases "),s("code",[n._v("3")])])])])]),n._v(" "),s("p",[n._v("Method 2 I don’t quite understand ❓")]),n._v(" "),s("p",[n._v("continue 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function func () {\n     console. log(2);\n\n     return Promise. resolve()\n         .then(() => console.log(5))\n         .then(() => console.log(6))\n         .then(() => console.log(7))\n}\n\nasync function test () {\n     console. log(1);\n     await func()\n     console. log(3);\n}\n\ntest();\nconsole. log(4);\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n\n// Final result 👉: 1 2 4 B 5 C 6 D 7 3\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br")])]),s("p",[n._v("Still don't get it?")]),n._v(" "),s("p",[n._v("continue 👇")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function test () {\n     console. log(1);\n     await Promise. resolve()\n         .then(() => console.log(5))\n         .then(() => console.log(6))\n         .then(() => console.log(7))\n     console. log(3);\n}\n\ntest();\nconsole. log(4);\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n\n// Final result 👉: 1 4 B 5 C 6 D 7 3\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("blockquote",[s("p",[n._v("Note:")]),n._v(" "),s("p",[n._v("To sum up, "),s("code",[n._v("await")]),n._v(" must wait until the expression on the right has "),s("strong",[n._v("exact value")]),n._v(" before releasing it, otherwise it will wait forever (blocking the subsequent code in the current "),s("code",[n._v("async")]),n._v(" function), if you are not convinced, take a look at this 👇")]),n._v(" "),s("ul",[s("li",[s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"})])])]),n._v(" "),s("p",[n._v("function func () {\nreturn new Promise((resolve) => {\nconsole. log('B')\n// resolve() deliberately keeps pending\n})\n}")]),n._v(" "),s("p",[n._v("async function test () {\nconsole. log(1);\nawait func()\nconsole. log(3);\n}")]),n._v(" "),s("p",[n._v("test();\nconsole. log(4);\n// final result 👉: 1 B 4 (3 will never be printed)")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("\n\n// --------------------- or written as 👇-------------------\nasync function test () {\nconsole. log(1);\nawait new Promise((resolve) => {\nconsole. log('B')\n// resolve() deliberately keeps pending\n})\nconsole. log(3);\n}\n\ntest();\nconsole. log(4);\n// final result 👉: 1 B 4 (3 will never be printed)\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"})])]),n._v(" "),s("p",[n._v("🌰3:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("async function func () {\n     console. log(2);\n     return {\n         then (cb) {\n             cb()\n         }\n     }\n}\n\nasync function test () {\n     console. log(1);\n     await func();\n     console. log(3);\n}\n\ntest();\nconsole. log(4);\n\nnew Promise((resolve) => {\n     console. log('B')\n     resolve()\n}).then(() => {\n     console. log('C')\n}).then(() => {\n     console. log('D')\n})\n\n// Final result 👉: 1 2 4 B C 3 D\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br")])]),s("blockquote",[s("p",[n._v("Step split 👇:")]),n._v(" "),s("ul",[s("li",[n._v("synchronous code outputs "),s("code",[n._v("1, 2")])]),n._v(" "),s("li",[s("code",[n._v("await")]),n._v(" gets the specific return value "),s("code",[n._v("thenable")]),n._v(" of the "),s("code",[n._v("func")]),n._v(" function, and puts the subsequent code in the current "),s("code",[n._v("async")]),n._v(" function into the microtask "),s("code",[n._v("then1")]),n._v(" (but it needs to wait for a "),s("code",[n._v("then")]),n._v(" time)")]),n._v(" "),s("li",[n._v("synchronous code outputs "),s("code",[n._v("4, B")]),n._v(", microtask "),s("code",[n._v("then2")]),n._v(" that generates "),s("code",[n._v("log(C)")])]),n._v(" "),s("li",[n._v("Because "),s("code",[n._v("then1")]),n._v(" lags behind by a "),s("code",[n._v("then")]),n._v(" time, execute "),s("code",[n._v("then2")]),n._v(" directly to output "),s("code",[n._v("C")]),n._v(", and generate "),s("code",[n._v("log(D)")]),n._v(" microtask "),s("code",[n._v("then3")])]),n._v(" "),s("li",[n._v("Execute the microtask "),s("code",[n._v("then1")]),n._v(" that was originally delayed by a "),s("code",[n._v("then")]),n._v(" time, and output "),s("code",[n._v("3")])]),n._v(" "),s("li",[n._v("Execute the last microtask "),s("code",[n._v("then3")]),n._v(" output "),s("code",[n._v("D")])])])]),n._v(" "),s("h2",{attrs:{id:"_4-summary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-summary"}},[n._v("#")]),n._v(" 4. Summary")]),n._v(" "),s("hr"),n._v(" "),s("blockquote",[s("p",[s("code",[n._v("async")]),n._v(" function return value")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("📑 Conclusion: When the "),s("code",[n._v("async")]),n._v(" function throws a return value, it will start "),s("strong",[n._v("different numbers of microtasks")]),n._v(" according to the return value "),s("strong",[n._v("type")])])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("return result value: not "),s("code",[n._v("thenable")]),n._v(", not "),s("code",[n._v("promise")]),n._v(" (do not wait)")])])]),n._v(" "),s("li",[s("p",[n._v("return result value: "),s("code",[n._v("thenable")]),n._v(" (waiting for 1 "),s("code",[n._v("then")]),n._v(" time)")])]),n._v(" "),s("li",[s("p",[n._v("return result value: "),s("code",[n._v("promise")]),n._v(" (waiting for 2 "),s("code",[n._v("then")]),n._v(" time)")])])]),n._v(" "),s("p",[n._v("The difference between "),s("code",[n._v("await")]),n._v(" rvalue types")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("Receive a non-"),s("code",[n._v("thenable")]),n._v(" type, a microtask "),s("code",[n._v("then")]),n._v(" will be added to the microtask queue immediately, "),s("strong",[n._v("but no need to wait")])])]),n._v(" "),s("li",[s("p",[n._v("connected to the "),s("code",[n._v("thenable")]),n._v(" type, you need to "),s("strong",[n._v("wait for a "),s("code",[n._v("then")]),n._v(" time before executing")])])]),n._v(" "),s("li",[s("p",[n._v("Receive the "),s("code",[n._v("Promise")]),n._v(" type (with a definite return value), and immediately add a microtask "),s("code",[n._v("then")]),n._v(" to the microtask queue, "),s("strong",[n._v("but no need to wait")])])]),n._v(" "),s("li",[s("ul",[s("li",[n._v("TC 39 made a modification to how to deal with "),s("code",[n._v("await")]),n._v(" followed by "),s("code",[n._v("promise")]),n._v(", "),s("strong",[n._v("removed")]),n._v(" two extra microtasks, in "),s("strong",[n._v("earlier version")]),n._v(", it will still wait for two "),s("code",[n._v("then")]),n._v(" time")])])])])]),n._v(" "),s("h3",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[n._v("#")]),n._v(" References")]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("[1] https://juejin.cn/post/6844903715342647310#heading-3: "),s("em",[n._v("https://juejin.cn/post/6844903715342647310#heading-3")])])])}),[],!1,null,null,null);s.default=t.exports}}]);