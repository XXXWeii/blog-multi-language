(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{697:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("自从引入组合式 API 的概念以来，一个主要的未解决的问题就是 "),t("code",[s._v("ref")]),s._v(" 和 "),t("code",[s._v("reactive")]),s._v(" 到底用哪个。"),t("code",[s._v("reactive")]),s._v(" 存在解构丢失响应性的问题，而 "),t("code",[s._v("ref")]),s._v(" 需要到处使用 "),t("code",[s._v(".value")]),s._v(" 则感觉很繁琐，并且在没有类型系统的帮助时很容易漏掉 "),t("code",[s._v(".value")]),s._v("。")]),s._v(" "),t("p",[s._v("例如，下面的计数器：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<template>\n  <button @click="increment">{{ count }}</button>\n</template>\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("使用 "),t("code",[s._v("ref")]),s._v(" 定义 "),t("code",[s._v("count")]),s._v(" 变量和 "),t("code",[s._v("increment")]),s._v(" 方法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let count = ref(0)\n\nfunction increment() {\n  count.value++\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("而使用响应性语法糖，我们可以像这样书写代码：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let count = $ref(0)\n\nfunction increment() {\n  count++\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ol",[t("li",[s._v("Vue 的响应性语法糖是一个编译时的转换步骤，"),t("code",[s._v("$ref()")]),s._v(" 方法是一个"),t("strong",[s._v("编译时的宏命令")]),s._v("，它不是一个真实的、在运行时会调用的方法，而是用作 Vue 编译器的标记，表明最终的 "),t("code",[s._v("count")]),s._v(" 变量需要是一个"),t("strong",[s._v("响应式变量")]),s._v("。")]),s._v(" "),t("li",[s._v("响应式的变量可以像普通变量那样被访问和重新赋值，但这些操作在编译后都会变为带 "),t("code",[s._v(".value")]),s._v(" 的 "),t("code",[s._v("ref")]),s._v("。所以上面例子中的代码也会被编译成使用 "),t("code",[s._v("ref")]),s._v(" 定义的语法。")]),s._v(" "),t("li",[s._v("每一个会返回 "),t("code",[s._v("ref")]),s._v(" 的响应式 API 都有一个相对应的、以 "),t("code",[s._v("$")]),s._v(" 为前缀的宏函数。包括以下这些 API：")])]),s._v(" "),t("ul",[t("li",[s._v("ref -> $ref")]),s._v(" "),t("li",[s._v("computed -> $computed")]),s._v(" "),t("li",[s._v("shallowRef -> $shallowRef")]),s._v(" "),t("li",[s._v("customRef -> $customRef")]),s._v(" "),t("li",[s._v("toRef -> $toRef")])]),s._v(" "),t("ol",[t("li",[s._v("可以使用 "),t("code",[s._v("$()")]),s._v(" 宏来将现存的 "),t("code",[s._v("ref")]),s._v(" 转换为响应式变量。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const a = ref(0)\nlet count = $(a)\ncount++\nconsole.log(a.value) // 1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ol",[t("li",[s._v("可以使用 "),t("code",[s._v("$$()")]),s._v(" 宏来将任何对响应式变量的引用都会保留为对相应 "),t("code",[s._v("ref")]),s._v(" 的引用。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("let count = $ref(0)\nconsole.log(isRef($$(count))) // true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("$$()")]),s._v(" 也适用于已解构的 "),t("code",[s._v("props")]),s._v("，因为它们也是响应式的变量。编译器会高效地通过 "),t("code",[s._v("toRef")]),s._v(" 来做转换：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const { count } = defineProps<{ count: number }>()\npassAsRef($$(count))\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("响应性语法糖是 "),t("strong",[s._v("组合式 API")]),s._v(" 特有的功能，且必须通过构建步骤使用。")]),s._v(" "),t("ol",[t("li",[s._v("必须，需要 "),t("code",[s._v("@vitejs/plugin-vue@>=2.0.0")]),s._v("，将应用于 SFC 和 js(x)/ts(x) 文件。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vite.config.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("plugins")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("reactivityTransform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("注意 "),t("code",[s._v("reactivityTransform")]),s._v(" 现在是一个插件的顶层选项，而不再是位于 "),t("code",[s._v("script.refSugar")]),s._v(" 之中了，因为它不仅仅只对 SFC 起效。")])]),s._v(" "),t("p",[s._v("如果是 "),t("code",[s._v("vue-cli")]),s._v(" 构建，需要 "),t("code",[s._v("vue-loader@>=17.0.0")]),s._v("，目前仅对 SFC 起效。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vue.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("chainWebpack")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("module\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue-loader'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("options")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("reactivityTransform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("如果是 "),t("code",[s._v("webpack")]),s._v(" + "),t("code",[s._v("vue-loader")]),s._v(" 构建，需要 "),t("code",[s._v("vue-loader@>=17.0.0")]),s._v("，目前仅对 SFC 起效。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack.config.js")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("module")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("rules")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.vue$")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("loader")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue-loader'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("options")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("reactivityTransform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ol",[t("li",[s._v("可选，"),t("code",[s._v("tsconfig.json")]),s._v(" 文件中添加如下代码, 不然会报错 "),t("code",[s._v("TS2304: Cannot find name '$ref'.")]),s._v("，虽然不影响使用,但是会影响开发体验：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"compilerOptions":{ "types": ["vue/ref-macros"] } \n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",[t("li",[s._v("可选，"),t("code",[s._v("eslintrc.cjs")]),s._v(" 文件中添加如下代码，不然会提示 "),t("code",[s._v("ESLint: '$ref' is not defined.(no-undef)")]),s._v("：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('module.exports = { globals: {\n    $ref: "readonly",\n    $computed: "readonly",\n    $shallowRef: "readonly",\n    $customRef: "readonly",\n    $toRef: "readonly",\n  }\n}; \n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("4.当启用响应性语法糖时，这些宏函数都是全局可用的、无需手动导入。也可以在 vue 文件中显式引入 "),t("code",[s._v("vue/macros")]),s._v("，这样就不用配置第二和第三步中的 "),t("code",[s._v("tsconfig.json")]),s._v(" 和 "),t("code",[s._v("eslintrc")]),s._v(" 了。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import { $ref } from 'vue/macros'\n\nlet count = $ref(0)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"已废弃的实验性功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#已废弃的实验性功能"}},[s._v("#")]),s._v(" 已废弃的实验性功能")]),s._v(" "),t("hr"),s._v(" "),t("ol",[t("li",[s._v("响应性语法糖曾经是一个实验性功能，且已被废弃，请阅读"),t("strong",[s._v("废弃原因")]),s._v("[1]。")]),s._v(" "),t("li",[s._v("在未来的一个小版本更新中，它将会从 Vue core 中被移除。如需继续使用，请通过 "),t("strong",[s._v("Vue Macros")]),s._v("[2] 插件")])]),s._v(" "),t("h2",{attrs:{id:"废弃原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#废弃原因"}},[s._v("#")]),s._v(" 废弃原因")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("尤雨溪在2023 年 2 月 21 日上午 10:05 GMT+8，亲自给出了废弃的原因，翻译如下：")]),s._v(" "),t("p",[s._v("正如你们中的许多人已经知道的那样，我们在团队一致同意的情况下正式放弃了这个 RFC。")]),s._v(" "),t("h3",{attrs:{id:"理由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理由"}},[s._v("#")]),s._v(" 理由")]),s._v(" "),t("p",[s._v("Reactivity Transform 的最初目标是通过在处理反应状态时提供更简洁的语法来改善开发人员的体验。我们将其作为实验性产品发布，以收集来自现实世界使用情况的反馈。尽管提出了这些好处，我们还是发现了以下问题：")]),s._v(" "),t("ol",[t("li",[s._v("失去 "),t("code",[s._v(".value")]),s._v(" 使得更难分辨正在跟踪的内容以及哪条线触发了反应效果。这个问题在小型 SFC 中并不那么明显，但在大型代码库中，心理开销变得更加明显，特别是如果语法也在 SFC "),t("strong",[s._v("之外使用。")])]),s._v(" "),t("li",[s._v("由于 (1)，一些用户选择仅在 SFC 内部使用 Reactivity Transform，这会在不同心智模型之间造成不一致和上下文转换成本。因此，困境在于仅在 SFC 内部使用它会导致不一致，但在 SFC 外部使用它会损害可维护性。")]),s._v(" "),t("li",[s._v("由于仍然会有外部函数期望使用原始引用，因此反应变量和原始引用之间的转换是不可避免的。这最终增加了更多的学习内容和额外的精神负担，我们注意到这比普通的 Composition API 更让初学者感到困惑。")])]),s._v(" "),t("p",[s._v("最重要的是，碎片化的潜在风险。尽管这是明确的选择加入，但一些用户对该提议表示强烈反对，原因是他们担心他们将不得不与不同的代码库一起工作，在这些代码库中，有些人选择了使用它，而有些人则没有。这是一个合理的担忧，因为 Reactivity Transform 需要一种不同的心智模型，它会扭曲 JavaScript 语义（变量赋值能够触发反应效果）。")]),s._v(" "),t("p",[s._v("考虑到所有因素，我们认为将其作为一个稳定的功能使用会导致问题多于收益，因此不是一个好的权衡。")]),s._v(" "),t("h3",{attrs:{id:"迁移计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迁移计划"}},[s._v("#")]),s._v(" 迁移计划")]),s._v(" "),t("ul",[t("li",[s._v("该功能已经通过 "),t("strong",[s._v("Vue Macros")]),s._v("[3] 以外部包的形式得到支持。")]),s._v(" "),t("li",[s._v("3.3：该功能将被标记为已弃用。它将继续工作，但您应该在此期间迁移到 Vue Macros。")]),s._v(" "),t("li",[s._v("3.4：该功能将从核心中删除，除非使用 Vue Macros，否则将不再有效。")])]),s._v(" "),t("h3",{attrs:{id:"留言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#留言"}},[s._v("#")]),s._v(" 留言")]),s._v(" "),t("ul",[t("li",[s._v("虽然 Reactivity Transform 会从官方包中移除，但我认为这是一个很好的尝试。")]),s._v(" "),t("li",[s._v("写得好。我喜欢详细的 RFC 和基于用户反馈的客观评估。最后的结论很有道理。不要让完美成为优秀的敌人。")]),s._v(" "),t("li",[s._v("虽然我很享受这个功能带来的便利，但我在实际使用中确实发现了这个潜在的碎片问题。在未来的版本中删除此功能可能不太情愿，但工程师应该认真对待。🙂")]),s._v(" "),t("li",[s._v("您是删除所有功能还是仅删除 "),t("code",[s._v("ref.value")]),s._v(" 进行转换的部分？响应式 "),t("code",[s._v("props")]),s._v(" 解构呢，它会留下来吗？")]),s._v(" "),t("li",[s._v("我一直在将它用于中等规模的电子商务网站，没有任何问题。我理解删除它背后的基本原理，但在实践中我发现它确实是一个很大的改进。所以我的问题是：现在怎么办？")]),s._v(" "),t("li",[s._v("是否建议那些讨厌 "),t("code",[s._v(".value")]),s._v(" 的人现在尽可能避免使用 "),t("code",[s._v("ref()")]),s._v(" 并像以前那样使用 "),t("code",[s._v("reactive()")]),s._v("？")]),s._v(" "),t("li",[t("code",[s._v(".value")]),s._v(" 是必要的复杂性。就像任何其他响应式库 "),t("code",[s._v("xxx.set()")]),s._v(" 一样。")]),s._v(" "),t("li",[s._v("创建一个转换所有 Reactivity Transform 代码的包应该很容易吧？我也喜欢按照推荐的方式做事。")]),s._v(" "),t("li",[s._v("...")])]),s._v(" "),t("h3",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("p",[s._v("[1]废弃原因: "),t("em",[s._v("https://github.com/vuejs/rfcs/discussions/369#discussioncomment-5059028")])]),s._v(" "),t("p",[s._v("[2]Vue Macros: "),t("em",[s._v("https://vue-macros.sxzz.moe/features/reactivity-transform.html")])]),s._v(" "),t("p",[s._v("[3]Vue Macros: "),t("em",[s._v("https://vue-macros.sxzz.moe/features/reactivity-transform.html")])])])}),[],!1,null,null,null);t.default=n.exports}}]);